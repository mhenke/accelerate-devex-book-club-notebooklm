# Reusable checkpoint card answers
# Usage in advanced-checkpoint.html: answers=site.data.checkpoint_answers.dora_assessment

dora_assessment:
  - text: "Elite Performance"
    subtext: "Daily deployments, <1 hour lead time, <1 hour recovery"
    value: "elite" 
    performance_class: "performance-high"
    feedback_title: "üöÄ Elite-Performing Team"
    feedback_content: "Your team demonstrates elite software delivery performance! Organizations at this level deploy multiple times per day, have lead times under one hour, restore service in under an hour, and have change failure rates under 15%. Focus on maintaining these practices and sharing knowledge with other teams."
  - text: "High Performance"
    subtext: "Weekly deployments, <1 day lead time, <1 day recovery"
    value: "high"
    performance_class: "performance-high" 
    feedback_title: "üéØ High-Performing Team"
    feedback_content: "Excellent! Your team shows high software delivery performance. High performers typically deploy weekly, have lead times under one day, and change failure rates of 0-15%. Continue improving toward elite performance by increasing deployment frequency and reducing lead times."
  - text: "Medium Performance"
    subtext: "Monthly deployments, <1 week lead time, <1 week recovery"
    value: "medium"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Medium-Performing Team"
    feedback_content: "Your team shows solid DevOps practices with room for improvement. Medium performers typically deploy weekly to monthly, have lead times of days to weeks, and change failure rates of 16-45%. Focus on reducing batch sizes, improving test automation, and increasing deployment frequency."
  - text: "Low Performance"
    subtext: "Rarely deploy, >1 month lead time, >1 week recovery"
    value: "low"
    performance_class: "performance-low"
    feedback_title: "üîß Low-Performing Team"
    feedback_content: "Your team has significant opportunities for improvement. Low performers deploy monthly to every six months, have lead times of months, take days to weeks to restore service, and have change failure rates of 46-60%. Start with version control, deployment automation, and continuous integration basics."

deployment_confidence:
  - text: "Anxious & Stressful"
    value: "anxious"
    performance_class: "performance-low"
    feedback_title: "üîß Deployment Anxiety Signals Process Problems"
    feedback_content: "According to Accelerate research, deployment pain is not inevitable‚Äîit's a signal of poor practices. Anxiety indicates manual processes, large batch sizes, and insufficient testing. Start with small improvements: add one test, create a deployment checklist, or implement basic monitoring."
  - text: "Manageable but Tense"
    value: "neutral"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Manageable Deployments with Improvement Potential"
    feedback_content: "Your team manages deployments but still experiences tension. This suggests some good practices are in place but opportunities remain. Focus on increasing deployment frequency, reducing batch sizes, and building more comprehensive automated testing to move toward confident deployments."
  - text: "Confident & Routine"
    value: "confident"
    performance_class: "performance-high"
    feedback_title: "üöÄ Confident Deployment Culture"
    feedback_content: "Excellent! Confident, routine deployments indicate strong DevOps practices. Your team likely has good test automation, deployment automation, and monitoring. Continue refining these practices and help other teams achieve similar confidence through knowledge sharing."

improvement_priority:
  - text: "Lead Time"
    value: "lead-time"
    performance_class: "performance-high"
    feedback_title: "üéØ Improve Lead Time"
    feedback_content: "Lead time measures the time from code commit to production. To improve: reduce batch sizes, implement trunk-based development, automate testing and deployment pipelines, and eliminate manual approval processes. Small, frequent changes reduce lead time significantly."
  - text: "Deploy Frequency"
    value: "deploy-frequency"
    performance_class: "performance-high"
    feedback_title: "üöÄ Increase Deployment Frequency"
    feedback_content: "Deployment frequency indicates your ability to deliver value quickly. To improve: work in smaller batches, implement feature flags, improve automated testing, and reduce dependencies between teams. Start by deploying weekly, then progress to daily deployments."
  - text: "Restore Time"
    value: "restore-time"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Reduce Mean Time to Restore"
    feedback_content: "Faster recovery from failures is crucial for stability. To improve: implement comprehensive monitoring and alerting, practice incident response procedures, improve rollback capabilities, and maintain good documentation. Preparation enables rapid response when issues occur."
  - text: "Change Fail Rate"
    value: "change-fail"
    performance_class: "performance-low"
    feedback_title: "üîß Lower Change Failure Rate"
    feedback_content: "High change failure rates indicate quality issues in your delivery process. To improve: implement comprehensive automated testing, use test-driven development, improve code review processes, and implement continuous integration. Quality must be built in, not inspected later."

culture_assessment:
  - text: "Pathological - Power-oriented, fear-driven, information hoarding"
    value: "pathological"
    performance_class: "performance-low"
    feedback_title: "üîß Pathological Culture (Type A)"
    feedback_content: "Organizations with pathological culture tend to have lower software delivery performance. This culture is characterized by low cooperation, messengers being 'shot', shared responsibility being discouraged, and failure leading to scapegoating. Research shows these organizations typically have longer lead times, higher change failure rates, and slower recovery times. Focus on building psychological safety and encouraging learning from failures."
  - text: "Bureaucratic - Rule-oriented, department focused, modest cooperation"
    value: "bureaucratic"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Bureaucratic Culture (Type B)"
    feedback_content: "Bureaucratic cultures show modest cooperation but are rule-oriented rather than mission-focused. These organizations often have medium software delivery performance with room for improvement. While better than pathological cultures, they can still benefit from reducing red tape, encouraging innovation, and focusing more on outcomes than processes."
  - text: "Generative - Performance-oriented, mission focused, high cooperation"
    value: "generative"
    performance_class: "performance-high"
    feedback_title: "üöÄ Generative Culture (Type C)"
    feedback_content: "Congratulations! Generative culture is strongly correlated with high software delivery performance. Organizations with generative culture encourage high cooperation, treat failures as learning opportunities, encourage risk-taking, and focus on mission accomplishment. Research shows these organizations have faster lead times, higher deployment frequency, lower change failure rates, and faster recovery times."

# Generic Yes/No answers
yes_no:
  - text: "Yes"
    value: "yes"
    performance_class: "performance-high"
  - text: "No"
    value: "no"
    performance_class: "performance-low"

# 5-point scale with subtexts
five_point_scale:
  - text: "Strongly Agree"
    subtext: "This completely describes our situation"
    value: "strongly-agree"
    performance_class: "performance-high"
    feedback_title: "üöÄ Excellent Integration"
    feedback_content: "Strong security integration is correlated with higher delivery performance. Your practices likely include automated security testing, early security reviews, and security as code. Continue expanding these practices across all teams."
  - text: "Agree"
    subtext: "This mostly describes our situation"
    value: "agree"
    performance_class: "performance-high"
    feedback_title: "‚≠ê Good Security Practices"
    feedback_content: "Good security integration supports fast, safe delivery. You're implementing many best practices. Consider expanding automated security testing and reducing manual security gates to achieve elite performance."
  - text: "Neutral"
    subtext: "Sometimes yes, sometimes no"
    value: "neutral"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Mixed Security Integration"
    feedback_content: "Inconsistent security integration creates delivery bottlenecks. Focus on automating security tests, implementing security scanning in CI/CD pipelines, and training developers on secure coding practices."
  - text: "Disagree"
    subtext: "This rarely describes our situation"
    value: "disagree"
    performance_class: "performance-low"
    feedback_title: "üîß Security Integration Opportunity"
    feedback_content: "Limited security integration typically slows delivery and increases risk. Start with basic automated security scanning, security code reviews, and integrating security requirements into planning processes."
  - text: "Strongly Disagree"
    subtext: "This never describes our situation"
    value: "strongly-disagree"
    performance_class: "performance-low"
    feedback_title: "üö® Security Integration Gap"
    feedback_content: "Minimal security integration creates significant delivery delays and security risks. Begin with foundational practices: automated security scanning, developer security training, and establishing security requirements early in the development process."

# Culture types with complex layout
westrum_culture_types:
  - name: "Pathological"
    description: "Power-oriented, low cooperation, blame culture"
    value: "pathological"
    performance_class: "performance-low"
    characteristics: ["Information is hoarded", "Failures are punished", "Novelty is crushed"]
  - name: "Bureaucratic"  
    description: "Rule-oriented, modest cooperation, rules over mission"
    value: "bureaucratic"
    performance_class: "performance-medium"
    characteristics: ["Information may be ignored", "Failures lead to justice", "Novelty creates problems"]
  - name: "Generative"
    description: "Performance-oriented, high cooperation, mission focused"
    value: "generative"
    performance_class: "performance-high"
    characteristics: ["Information is actively sought", "Failures lead to learning", "Novelty is implemented"]

# Leadership styles for Meeting 4
leadership_styles:
  - text: "Command & Control"
    subtext: "Top-down decisions, micromanagement, limited autonomy"
    value: "command"
    performance_class: "performance-low"
  - text: "Mixed Approach" 
    subtext: "Some delegation, moderate autonomy, situational leadership"
    value: "mixed"
    performance_class: "performance-medium"
  - text: "Transformational"
    subtext: "Servant leadership, high autonomy, vision-driven, coaching mindset"
    value: "transformational"
    performance_class: "performance-high"

# Technical practices maturity
technical_maturity:
  - text: "Ad Hoc"
    subtext: "Manual processes, no automation, reactive approach"
    value: "ad-hoc"
    performance_class: "performance-low"
  - text: "Repeatable"
    subtext: "Some automation, basic CI/CD, documented processes"
    value: "repeatable"
    performance_class: "performance-medium"
  - text: "Defined"
    subtext: "Comprehensive automation, strong CI/CD, measurement focus"
    value: "defined"
    performance_class: "performance-high"
  - text: "Optimizing"
    subtext: "Continuous improvement, advanced practices, data-driven decisions"
    value: "optimizing"
    performance_class: "performance-high"

# Transformation readiness checkboxes
transformation_readiness:
  - text: "Investment in learning & development"
    value: "learning-investment"
    feedback_content: "Learning investment is crucial for transformation success. Organizations that invest in capabilities development see 2x better performance outcomes."
  - text: "Patience for long-term culture change"
    value: "patient-discipline"
    feedback_content: "Cultural transformation takes 2-3 years. Organizations with patient discipline maintain momentum through inevitable setbacks and resistance."
  - text: "Culture of experimentation"
    value: "experimentation"
    feedback_content: "Experimentation culture enables rapid learning and adaptation. Teams that run small experiments reduce risk and accelerate improvement."
  - text: "Visual management practices"
    value: "visual-management"
    feedback_content: "Visual management makes problems visible for faster resolution. Teams with visual practices resolve issues 50% faster than those without."

# Coaching questions assessment for Meeting 4
coaching_assessment:
  - text: "Help me understand what obstacles the team encountered."
    subtext: "Supportive, learning-focused approach"
    value: "supportive"
    performance_class: "performance-high"
    feedback_title: "üöÄ Transformational Coaching"
    feedback_content: "This supportive approach aligns with transformational leadership. By seeking to understand obstacles, you demonstrate intellectual stimulation and individual consideration - two key transformational dimensions."
  - text: "Why wasn't this delivered on time as promised?"
    subtext: "Directive, accountability-focused approach"
    value: "directive"
    performance_class: "performance-low"
    feedback_title: "üîß Command & Control Response"
    feedback_content: "This directive approach reflects command & control leadership. While accountability matters, this framing can create defensive responses and reduce psychological safety, limiting learning opportunities."
  - text: "What support do you need to prevent this in the future?"
    subtext: "Enabling, development-focused approach"
    value: "enabling"
    performance_class: "performance-high"
    feedback_title: "‚≠ê Enabling Leadership"
    feedback_content: "This enabling question demonstrates transformational leadership by focusing on development and prevention. It shows individual consideration and helps build team capability for future success."

# Lean management maturity for Meeting 3
lean_management:
  - text: "Advanced Lean"
    subtext: "Peer review, fast feedback, data-driven decisions"
    value: "high"
    performance_class: "performance-high"
    feedback_title: "üöÄ Advanced Lean Management"
    feedback_content: "Your team demonstrates advanced lean management practices. Teams with peer review, fast feedback, and data-driven decisions show 2x higher organizational performance. Continue refining these practices and help other teams achieve similar maturity."
  - text: "Developing Lean"
    subtext: "Some lean practices, mixed approval processes"
    value: "medium"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Developing Lean Practices"
    feedback_content: "Your team is developing lean management capabilities with room for improvement. Focus on reducing approval processes, implementing peer review systems, and establishing faster feedback loops to progress toward advanced lean practices."
  - text: "Traditional Management"
    subtext: "Heavy approval, command & control"
    value: "low"
    performance_class: "performance-low"
    feedback_title: "üîß Traditional Management Opportunity"
    feedback_content: "Your team uses traditional command & control practices that limit performance. Research shows lean management practices (peer review, learning culture, fast feedback) drive significantly better outcomes. Start with one small change like peer reviews."

# Deployment pain assessment for Meeting 3
deployment_pain:
  - text: "Low Pain (1-3)"
    subtext: "Minutes to deploy, business hours, reliable"
    value: "low"
    performance_class: "performance-high"
    feedback_title: "üöÄ Low Deployment Pain"
    feedback_content: "Excellent! Low deployment pain indicates strong DevOps practices. Your reliable, fast deployments during business hours suggest good automation and testing. This sustainable approach prevents burnout and supports high performance."
  - text: "Medium Pain (4-6)"
    subtext: "Hours to deploy, some coordination needed"
    value: "medium"
    performance_class: "performance-medium"
    feedback_title: "‚ö° Medium Deployment Pain"
    feedback_content: "Your deployments require effort and coordination. Focus on automation, better testing, and reducing batch sizes to move toward low-pain deployments. This will improve team sustainability and reduce burnout risk."
  - text: "High Pain (7-10)"
    subtext: "Days to deploy, weekend work, high stress"
    value: "high"
    performance_class: "performance-low"
    feedback_title: "üîß High Deployment Pain"
    feedback_content: "High deployment pain creates stress and burnout. This indicates opportunities for automation, better testing, smaller batches, and improved processes. Research shows reducing deployment pain is key to both performance and employee satisfaction."

# Employee satisfaction factors for Meeting 3
satisfaction_factors:
  - text: "Meaningful Work: Challenging, purposeful tasks"
    value: "meaningful"
    feedback_content: "Meaningful work is the foundation of satisfaction. Teams with challenging, purposeful tasks show higher engagement and performance."
  - text: "Learning Opportunities: Growth and development"
    value: "learning"
    feedback_content: "Learning opportunities drive long-term satisfaction. Continuous growth prevents stagnation and improves retention."
  - text: "Team Support: Psychological safety, good culture"
    value: "support"
    feedback_content: "Team support and psychological safety are crucial for satisfaction. Safe environments enable innovation and collaboration."
  - text: "Right Tools: Access to necessary resources"
    value: "tools"
    feedback_content: "Having the right tools eliminates frustration and enables productivity. Tool access significantly impacts daily satisfaction."