// Material Design Grid System - Responsive Layout Components
// =========================================================
// Mobile-first responsive grid system following Material Design principles
// with content-specific responsive patterns

// =============================================================================
// PAGE LEVEL CONTAINERS
// =============================================================================

// Default container
.container {
  margin: 0 auto;
  padding: 0 var(--spacing-md);

  @include tablet-up {
    padding: 0 var(--spacing-lg);
  }
}

.container--narrow {
  max-width: 800px;
}

.container--wide {
  max-width: 1400px;
}

// Grid system
.grid {
  display: grid;
  gap: var(--spacing-lg);
}

.grid--2-col {
  @include tablet-up {
    grid-template-columns: 1fr 1fr;
  }
}

.grid--3-col {
  @include tablet-up {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  @include desktop-up {
    grid-template-columns: repeat(3, 1fr);
  }
}

.grid--4-col {
  @include tablet-up {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  @include desktop-up {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Auto-fit grid with minimum column width
.grid--auto-fit {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));

  &.grid--auto-fit--small {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  &.grid--auto-fit--large {
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  }
}

// Flexbox utilities
.flex {
  display: flex;
  gap: var(--spacing-md);
}

.flex--center {
  @include flex-center;
}

.flex--between {
  @include flex-between;
}

.flex--column {
  @include flex-column;
}

.flex--wrap {
  flex-wrap: wrap;
}

// Responsive flex direction
.flex--mobile-column {
  flex-direction: column;

  @include tablet-up {
    flex-direction: row;
  }
}

// Gap utilities
.gap-sm {
  gap: var(--spacing-sm);
}
.gap-md {
  gap: var(--spacing-md);
}
.gap-lg {
  gap: var(--spacing-lg);
}
.gap-xl {
  gap: var(--spacing-xl);
}

// Section spacing
.section {
  padding: var(--spacing-2xl) 0;

  &.section--sm {
    padding: var(--spacing-lg) 0;
  }

  &.section--lg {
    padding: var(--spacing-3xl) 0;
  }
}

// =============================================================================
// CONTENT-SPECIFIC GRID PATTERNS (Material Design)
// =============================================================================

// DEPRECATED: Use content-grid instead

// DEPRECATED: Use resource-grid instead

// DEPRECATED: Use content-grid instead

// DEPRECATED: Use feature-grid instead

// DEPRECATED: Use resource-grid (semantic version below) instead

// DEPRECATED: Use feature-grid instead

// DEPRECATED PATTERNS - Use semantic grid classes instead:
// insights-grid, discussion-questions-grid, highlight-grid → card-grid
// outcomes-grid, chapters-grid-modern, stats-grid → resource-grid

// =============================================================================
// MATERIAL DESIGN RESPONSIVE UTILITIES
// =============================================================================

// Material Design responsive visibility
.md-hide-mobile {
  @include mobile-only {
    display: none;
  }
}

.md-hide-tablet {
  @include tablet-only {
    display: none;
  }
}

.md-hide-desktop {
  @include desktop-up {
    display: none;
  }
}

.md-show-mobile {
  @include mobile-up {
    display: none;
  }
}

.md-show-tablet {
  display: none;

  @include tablet-only {
    display: block;
  }
}

.md-show-desktop {
  display: none;

  @include desktop-up {
    display: block;
  }
}

// Material Design spacing adjustments per breakpoint
.md-spacing-mobile {
  @include mobile-only {
    gap: var(--space-sm) !important;
    padding: var(--space-md) !important;
  }
}

.md-spacing-tablet {
  @include tablet-only {
    gap: var(--space-lg) !important;
    padding: var(--space-lg) !important;
  }
}

.md-spacing-desktop {
  @include desktop-up {
    gap: var(--space-xl) !important;
    padding: var(--space-xl) !important;
  }
}

// =============================================================================
// SEMANTIC GRID SYSTEM - 4 CORE PATTERNS
// =============================================================================
// Consolidates 18+ grid patterns into 4 semantic, reusable patterns
// Based on content type and responsive behavior analysis

// 1. CONTENT GRID - For educational content, learning materials
// Usage: Article content, learning sections, educational materials
// Pattern: 4→2→1 responsive progression
.content-grid {
  display: grid;
  gap: var(--space-lg); // 32px for comfortable reading
  grid-template-columns: 1fr; // Mobile: 1 column

  @include mobile-up {
    grid-template-columns: repeat(2, 1fr); // Tablet: 2 columns
  }

  @include tablet-up {
    grid-template-columns: repeat(4, 1fr); // Desktop: 4 columns
  }
}

// 2. CARD GRID - For resource cards, content cards, general displays
// Usage: Resource listings, insight cards, general content cards
// Pattern: Auto-fit with consistent minimum width
.card-grid {
  display: grid;
  gap: var(--space-lg); // 32px for visual breathing room
  grid-template-columns: repeat(
    auto-fit,
    minmax(280px, 1fr)
  ); // Responsive auto-fit

  @include mobile-only {
    grid-template-columns: 1fr; // Mobile: Force single column for readability
    // Tighter gap on mobile
  }
}

// 3. RESOURCE GRID - For compact resource displays, navigation elements
// Usage: Resource listings, compact content, utility displays
// Pattern: 3→2→1 responsive with tighter spacing
.resource-grid {
  display: grid;

  // 16px for compact layout
  grid-template-columns: 1fr; // Mobile: 1 column

  @include mobile-up {
    grid-template-columns: repeat(2, 1fr); // Tablet: 2 columns
  }

  @include tablet-up {
    grid-template-columns: repeat(3, 1fr); // Desktop: 3 columns
  }
}

// 4. FEATURE GRID - For hero features, promotional content, highlights
// Usage: Hero features, meeting overviews, key highlights
// Pattern: 2→1 responsive with generous spacing
.feature-grid {
  display: grid;
  gap: var(--space-xl); // 48px for prominent display
  grid-template-columns: 1fr; // Mobile: 1 column

  @include mobile-up {
    grid-template-columns: repeat(2, 1fr); // Tablet+: 2 columns
    gap: var(--space-2xl); // Even more space on larger screens
  }
}

// =============================================================================
// SEMANTIC GRID MODIFIERS
// =============================================================================

// Compact modifier for tighter layouts
.content-grid--compact,
.card-grid--compact,
.resource-grid--compact,
.feature-grid--compact {
  @include mobile-up {
    gap: var(--space-lg);
  }
}

// Spacious modifier for looser layouts
.content-grid--spacious,
.card-grid--spacious,
.resource-grid--spacious,
.feature-grid--spacious {
  gap: var(--space-xl);

  @include mobile-up {
    gap: var(--space-2xl);
  }
}
